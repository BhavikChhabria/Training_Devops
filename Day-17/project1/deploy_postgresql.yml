---
- name: Install and configure PostgreSQL
  hosts: all
  become: yes
  vars:
    db_name: mydatabase
    db_user: myuser
    db_password: mypassword
    backup_dir: /var/backups/postgresql
    backup_script_path: /usr/local/bin/backup.sh
    backup_time: "0 2 * * *"
    allowed_ip_range: "192.168.1.12/32"  # Updated IP address

  tasks:
    - name: Update the apt package index
      apt:
        update_cache: yes

    - name: Add PostgreSQL APT repository
      shell: echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" | tee /etc/apt/sources.list.d/pgdg.list

    - name: Download PostgreSQL APT repository key
      command: curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc -o /tmp/ACCC4CF8.asc
      args:
        creates: /tmp/ACCC4CF8.asc

    - name: Add PostgreSQL APT repository key
      apt_key:
        file: /tmp/ACCC4CF8.asc
        state: present

    - name: Update the apt package index again
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - acl
        - python3-pip
        - python3-psycopg2

    - name: Install PostgreSQL server
      apt:
        name: postgresql-13
        state: present

    - name: Ensure PostgreSQL service is started and enabled
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Create PostgreSQL database
      become_user: postgres
      postgresql_db:
        name: "{{ db_name }}"
        state: present

    - name: Create PostgreSQL user
      become_user: postgres
      postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        db: "{{ db_name }}"
        priv: "ALL"
        state: present

    - name: Ensure backup directory exists
      file:
        path: "{{ backup_dir }}"
        state: directory
        owner: postgres
        group: postgres
        mode: '0755'

    - name: Deploy pg_hba.conf template
      template:
        src: pg_hba.conf.j2
        dest: /etc/postgresql/13/main/pg_hba.conf
      notify:
        - Restart PostgreSQL

    - name: Deploy backup script
      copy:
        src: scripts/backup.sh
        dest: "{{ backup_script_path }}"
        mode: '0755'

    - name: Create cron job for database backup
      cron:
        name: "PostgreSQL backup"
        user: postgres
        minute: "{{ backup_time.split()[0] }}"
        hour: "{{ backup_time.split()[1] }}"
        day: "{{ backup_time.split()[2] }}"
        month: "{{ backup_time.split()[3] }}"
        weekday: "{{ backup_time.split()[4] }}"
        job: "{{ backup_script_path }}"

  handlers:
    - name: Restart PostgreSQL
      service:
        name: postgresql
        state: restarted

