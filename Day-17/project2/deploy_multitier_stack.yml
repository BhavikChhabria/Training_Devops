---
- name: Deploy and configure MySQL database
  hosts: localhost
  become: yes
  vars:
    db_name: "dbname"
    db_user: "dbusername"
    db_password: "pass123"

  tasks:
    - name: Remove PostgreSQL repository file if it exists
      file:
        path: /etc/apt/sources.list.d/pgdg.list
        state: absent
      ignore_errors: yes

    - name: Remove Kubernetes repository file if it exists
      file:
        path: /etc/apt/sources.list.d/kubernetes.list
        state: absent
      ignore_errors: yes

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install MySQL server and dependencies
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - mysql-server
        - mysql-client
        - python3-mysqldb
        - libmysqlclient-dev

    - name: Ensure MySQL service is running
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Create MySQL user
      mysql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        priv: '*.*:ALL'
        host: '%'
        state: present

    - name: Create MySQL database
      mysql_db:
        name: "{{ db_name }}"
        state: present

- name: Deploy and configure web server and application
  hosts: app
  become: yes
  vars:
    db_host: "localhost"  # Update to your actual database server address if not local
    db_name: "dbname"
    db_user: "dbusername"
    db_password: "pass123"

  tasks:
    - name: Install web server
      apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Ensure web server is running
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Deploy application files
      copy:
        src: files/index.html
        dest: /var/www/html/index.html

    - name: Configure application
      template:
        src: templates/app_config.php.j2
        dest: /var/www/html/app_config.php

    - name: Restart web server to apply changes
      service:
        name: nginx
        state: restarted

